{"ast":null,"code":"var _jsxFileName = \"/Users/shawnmorreau/Desktop/shawnmorreau.github.io/portfolio/src/Blog/BlogContainer.js\";\nimport React from \"react\";\nimport Blog from \"./Blog.js\";\nimport BlogAdmin from \"./BlogAdmin.js\";\nexport default class extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n\n    this.createNewPost = postObject => {\n      const allPosts = [...this.state.posts, postObject];\n      this.setState({\n        posts: allPosts\n      }); // const requestOptions={\n      //     method:'POST',\n      //     headers:{'Content-type':'application/json'},\n      //     body:JSON.stringify({title:'Shawn\\'s test'})\n      // };\n      // fetch('/api/blog/add',requestOptions)\n      //     .then(response=>response.json())\n      //     .then(data=>console.log(data));\n\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: 'React Hooks POST Request Example'\n        })\n      };\n      fetch('api/blog/add', requestOptions).then(response => response.json()).then(data => console.log(data));\n      console.log(allPosts);\n    };\n  }\n\n  componentDidMount() {\n    fetch('/api/blog/posts').then(res => {\n      return res.json();\n    }).then(data => this.setState({\n      posts: data\n    }));\n  }\n\n  render() {\n    const posts = this.state.posts.map((post, i) => React.createElement(Blog, {\n      key: i,\n      title: post.title,\n      content: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n    return React.createElement(React.Fragment, null, posts, React.createElement(BlogAdmin, {\n      createNewPost: this.createNewPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/shawnmorreau/Desktop/shawnmorreau.github.io/portfolio/src/Blog/BlogContainer.js"],"names":["React","Blog","BlogAdmin","Component","state","posts","createNewPost","postObject","allPosts","setState","requestOptions","method","headers","body","JSON","stringify","title","fetch","then","response","json","data","console","log","componentDidMount","res","render","map","post","i","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,eAAe,cAAcF,KAAK,CAACG,SAApB,CAA8B;AAAA;AAAA;AAAA,SACzCC,KADyC,GACjC;AACJC,MAAAA,KAAK,EAAE;AADH,KADiC;;AAAA,SASzCC,aATyC,GAS1BC,UAAD,IAAc;AACxB,YAAMC,QAAQ,GAAG,CAAE,GAAG,KAAKJ,KAAL,CAAWC,KAAhB,EAAuBE,UAAvB,CAAjB;AACA,WAAKE,QAAL,CAAc;AACVJ,QAAAA,KAAK,EAACG;AADI,OAAd,EAFwB,CAKxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,YAAME,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFU;AAGnBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAf;AAHa,OAAvB;AAKAC,MAAAA,KAAK,CAAC,cAAD,EAAiBP,cAAjB,CAAL,CACKQ,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFlB;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AACH,KAhCwC;AAAA;;AAIzCgB,EAAAA,iBAAiB,GAAG;AAChBP,IAAAA,KAAK,CAAC,iBAAD,CAAL,CACKC,IADL,CACUO,GAAG,IAAE;AAAC,aAAOA,GAAG,CAACL,IAAJ,EAAP;AAAkB,KADlC,EAEKF,IAFL,CAEUG,IAAI,IAAE,KAAKZ,QAAL,CAAc;AAACJ,MAAAA,KAAK,EAACgB;AAAP,KAAd,CAFhB;AAGH;;AAyBDK,EAAAA,MAAM,GAAG;AACL,UAAMrB,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBsB,GAAjB,CAAqB,CAACC,IAAD,EAAMC,CAAN,KAC3B,oBAAC,IAAD;AACI,MAAA,GAAG,EAAEA,CADT;AAEI,MAAA,KAAK,EAAED,IAAI,CAACZ,KAFhB;AAGI,MAAA,OAAO,EAAEY,IAAI,CAACE,OAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,CAAd;AAOA,WACI,0CACKzB,KADL,EAEI,oBAAC,SAAD;AACI,MAAA,aAAa,EAAE,KAAKC,aADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAQH;;AAjDwC","sourcesContent":["import React from \"react\";\nimport Blog from \"./Blog.js\";\nimport BlogAdmin from \"./BlogAdmin.js\";\n\nexport default class extends React.Component {\n    state = {\n        posts: []\n    }\n    componentDidMount() {\n        fetch('/api/blog/posts')\n            .then(res=>{return res.json()})\n            .then(data=>this.setState({posts:data}));\n    }\n    createNewPost=(postObject)=>{\n        const allPosts = [ ...this.state.posts, postObject];\n        this.setState({\n            posts:allPosts\n        });\n        // const requestOptions={\n        //     method:'POST',\n        //     headers:{'Content-type':'application/json'},\n        //     body:JSON.stringify({title:'Shawn\\'s test'})\n        // };\n        // fetch('/api/blog/add',requestOptions)\n        //     .then(response=>response.json())\n        //     .then(data=>console.log(data));\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ title: 'React Hooks POST Request Example' })\n        };\n        fetch('api/blog/add', requestOptions)\n            .then(response => response.json())\n            .then(data => console.log(data));\n    \n        console.log(allPosts);\n    }\n    render() {\n        const posts = this.state.posts.map((post,i) =>\n                <Blog\n                    key={i}\n                    title={post.title}\n                    content={post.content}\n                />\n            );\n        return (\n            <>\n                {posts}\n                <BlogAdmin\n                    createNewPost={this.createNewPost}\n                />\n            </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}