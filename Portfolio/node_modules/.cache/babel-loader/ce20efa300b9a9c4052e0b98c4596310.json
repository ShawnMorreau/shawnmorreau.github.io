{"ast":null,"code":"var _jsxFileName = \"/Users/shawnmorreau/Desktop/shawnmorreau.github.io/portfolio/src/Blog/BlogContainer.js\";\nimport React from \"react\";\nimport Blog from \"./Blog.js\";\nimport BlogAdmin from \"./BlogAdmin.js\";\nexport default class extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n\n    this.createNewPost = postObject => {\n      const lastId = this.state.posts[this.state.posts.length - 1].id;\n      const newObject = { ...postObject,\n        id: lastId\n      };\n      const allPosts = [...this.state.posts, newObject];\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postObject)\n      };\n      fetch('api/blog/add', requestOptions).then(response => this.setState({\n        posts: allPosts\n      }));\n    };\n\n    this.deletePost = post_id => {\n      const index = this.state.posts.findIndex(x => x.id === post_id);\n      console.log(index); // const newState = {\n      //     ...this.state.posts.splice(0,)\n      // }\n\n      const requestOptions = {\n        method: 'DELETE',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: post_id\n        })\n      };\n      fetch('api/blog', requestOptions).then(response => response.json());\n    };\n  }\n\n  componentDidMount() {\n    fetch('/api/blog/').then(res => {\n      return res.json();\n    }).then(data => this.setState({\n      posts: data\n    }));\n  }\n\n  render() {\n    const posts = this.state.posts.map((post, i) => React.createElement(Blog, {\n      key: i,\n      id: post.id,\n      title: post.title,\n      content: post.content,\n      deletePost: this.deletePost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n    return React.createElement(React.Fragment, null, posts, React.createElement(BlogAdmin, {\n      createNewPost: this.createNewPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/shawnmorreau/Desktop/shawnmorreau.github.io/portfolio/src/Blog/BlogContainer.js"],"names":["React","Blog","BlogAdmin","Component","state","posts","createNewPost","postObject","lastId","length","id","newObject","allPosts","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","setState","deletePost","post_id","index","findIndex","x","console","log","json","componentDidMount","res","data","render","map","post","i","title","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,eAAe,cAAcF,KAAK,CAACG,SAApB,CAA8B;AAAA;AAAA;AAAA,SACzCC,KADyC,GACjC;AACJC,MAAAA,KAAK,EAAE;AADH,KADiC;;AAAA,SASzCC,aATyC,GAS1BC,UAAD,IAAc;AACxB,YAAMC,MAAM,GAAG,KAAKJ,KAAL,CAAWC,KAAX,CAAiB,KAAKD,KAAL,CAAWC,KAAX,CAAiBI,MAAjB,GAAwB,CAAzC,EAA4CC,EAA3D;AACA,YAAMC,SAAS,GAAG,EACd,GAAGJ,UADW;AAEdG,QAAAA,EAAE,EAACF;AAFW,OAAlB;AAIA,YAAMI,QAAQ,GAAG,CAAE,GAAG,KAAKR,KAAL,CAAWC,KAAhB,EAAuBM,SAAvB,CAAjB;AACA,YAAME,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFU;AAGnBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,UAAf;AAHa,OAAvB;AAKAY,MAAAA,KAAK,CAAC,cAAD,EAAiBN,cAAjB,CAAL,CACKO,IADL,CACUC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAACjB,QAAAA,KAAK,EAACO;AAAP,OAAd,CADtB;AAEH,KAvBwC;;AAAA,SAwBzCW,UAxByC,GAwB7BC,OAAD,IAAW;AAClB,YAAMC,KAAK,GAAG,KAAKrB,KAAL,CAAWC,KAAX,CAAiBqB,SAAjB,CAA2BC,CAAC,IAAIA,CAAC,CAACjB,EAAF,KAASc,OAAzC,CAAd;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAFkB,CAGlB;AACA;AACA;;AACA,YAAMZ,cAAc,GAAC;AACjBC,QAAAA,MAAM,EAAC,QADU;AAEjBC,QAAAA,OAAO,EAAC;AAAC,0BAAe;AAAhB,SAFS;AAGjBC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAACR,UAAAA,EAAE,EAACc;AAAJ,SAAf;AAHY,OAArB;AAKAL,MAAAA,KAAK,CAAC,UAAD,EAAYN,cAAZ,CAAL,CACKO,IADL,CACUC,QAAQ,IAAEA,QAAQ,CAACS,IAAT,EADpB;AAEH,KArCwC;AAAA;;AAIzCC,EAAAA,iBAAiB,GAAG;AAChBZ,IAAAA,KAAK,CAAC,YAAD,CAAL,CACKC,IADL,CACUY,GAAG,IAAE;AAAC,aAAOA,GAAG,CAACF,IAAJ,EAAP;AAAkB,KADlC,EAEKV,IAFL,CAEUa,IAAI,IAAE,KAAKX,QAAL,CAAc;AAACjB,MAAAA,KAAK,EAAC4B;AAAP,KAAd,CAFhB;AAGH;;AA8BDC,EAAAA,MAAM,GAAG;AACL,UAAM7B,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiB8B,GAAjB,CAAqB,CAACC,IAAD,EAAMC,CAAN,KAC3B,oBAAC,IAAD;AACI,MAAA,GAAG,EAAEA,CADT;AAEI,MAAA,EAAE,EAAED,IAAI,CAAC1B,EAFb;AAGI,MAAA,KAAK,EAAE0B,IAAI,CAACE,KAHhB;AAII,MAAA,OAAO,EAAEF,IAAI,CAACG,OAJlB;AAKI,MAAA,UAAU,EAAE,KAAKhB,UALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,CAAd;AASA,WACI,0CACKlB,KADL,EAEI,oBAAC,SAAD;AACI,MAAA,aAAa,EAAE,KAAKC,aADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAQH;;AAxDwC","sourcesContent":["import React from \"react\";\nimport Blog from \"./Blog.js\";\nimport BlogAdmin from \"./BlogAdmin.js\";\n\nexport default class extends React.Component {\n    state = {\n        posts: []\n    }\n    componentDidMount() {\n        fetch('/api/blog/')\n            .then(res=>{return res.json()})\n            .then(data=>this.setState({posts:data}));\n    }\n    createNewPost=(postObject)=>{\n        const lastId = this.state.posts[this.state.posts.length-1].id;\n        const newObject = {\n            ...postObject,\n            id:lastId\n        }\n        const allPosts = [ ...this.state.posts, newObject];\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(postObject)\n        };\n        fetch('api/blog/add', requestOptions)\n            .then(response => this.setState({posts:allPosts}));\n    }\n    deletePost=(post_id)=>{\n        const index = this.state.posts.findIndex(x => x.id === post_id);\n        console.log(index);\n        // const newState = {\n        //     ...this.state.posts.splice(0,)\n        // }\n        const requestOptions={\n            method:'DELETE',\n            headers:{'Content-type':'application/json'},\n            body:JSON.stringify({id:post_id})\n        }\n        fetch('api/blog',requestOptions)\n            .then(response=>response.json())\n    }\n    render() {\n        const posts = this.state.posts.map((post,i) =>\n                <Blog\n                    key={i}\n                    id={post.id}\n                    title={post.title}\n                    content={post.content}\n                    deletePost={this.deletePost}\n                />\n            );\n        return (\n            <>\n                {posts}\n                <BlogAdmin\n                    createNewPost={this.createNewPost}\n                />\n            </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}