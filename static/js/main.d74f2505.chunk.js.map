{"version":3,"sources":["Blog/Blog.js","Blog/BlogAdmin.js","Blog/BlogContainer.js","Homepage/Homepage.js","NavBar/NavBar.js","Footer/Footer.js","About/About.js","Routing/Routing.js","App.js","serviceWorker.js","index.js"],"names":["Blog","props","title","content","id","onClick","deletePost","state","postDetails","updateValue","evt","name","target","value","setState","handleChange","e","preventDefault","createNewPost","className","type","this","onChange","React","Component","posts","getLastIndexOfPosts","length","postObject","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","post_id","newState","filter","x","res","map","post","i","key","Homepage","NavBar","to","Footer","href","rel","About","Routing","exact","path","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d74f2505.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Blog.css\";\nexport default function Blog(props){\n    const deletePost=()=>{\n        props.deletePost(props.id);\n    }\n    return(\n        <div>\n            <>\n                <p>{props.title}</p>\n                <p>{props.content}</p>\n                <p>{props.id}</p>\n            </>\n            <button onClick={deletePost}>X</button>\n        </div>\n    );\n}","import React from \"react\";\nimport \"./Blog.css\";\nexport default class extends React.Component{\n    state={\n        postDetails:{\n            title:\"\",\n            content:\"\",\n        }\n    }\n    updateValue = (evt) =>{\n        const name = evt.target.name;\n        const value = evt.target.value;\n        this.setState(state=>({\n            postDetails:{\n                ...state.postDetails,\n                [name]:value\n            }\n        }));\n    }\n    handleChange=(e)=>{\n        e.preventDefault();\n        this.props.createNewPost(\n            {\n                title:this.state.postDetails.title,\n                content:this.state.postDetails.content\n            }\n        );\n        this.setState({postDetails:{\n            title:\"\",\n            content:\"\"\n        }})\n        \n        \n    }\n    render(){\n        return(\n            <div className=\"BlogInput\">\n                <form>\n                    <label>Title:<input type=\"text\" name = \"title\" value={this.state.postDetails.title} onChange={this.updateValue}/></label>\n                    <br/>\n                    <label>Content:<input type=\"text\" name=\"content\" value = {this.state.postDetails.content} onChange={this.updateValue}/></label>\n                    <br/>\n                    <input type=\"submit\" value=\"Submit\" onClick={this.handleChange}/>\n                </form>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport Blog from \"./Blog.js\";\nimport BlogAdmin from \"./BlogAdmin.js\";\nimport \"../Syling/Styling.css\";\n\nexport default class extends React.Component {\n    state = {\n        posts: []\n    }\n    componentDidMount() {\n        fetch('/api/blog/')\n            .then(res=>{return res.json()})\n            .then(data=>this.setState({posts:data}));\n    }\n    getLastIndexOfPosts=()=>{\n        return this.state.posts[this.state.posts.length-1]\n    }\n    createNewPost=(postObject)=>{\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(postObject)\n        };\n        fetch('api/blog/add', requestOptions)\n            .then(response => response.json())\n            .then(data=>this.setState({posts:data}))\n                // this.setState({posts:allPosts}));\n    }\n    deletePost=(post_id)=>{\n        const newState = this.state.posts.filter(x=>x.id !== post_id);\n        const requestOptions={\n            method:'DELETE',\n            headers:{'Content-type':'application/json'},\n            body:JSON.stringify({id:post_id})\n        }\n        fetch('api/blog',requestOptions)\n            .then(this.setState({posts:newState}))\n    }\n    render() {\n        const posts = this.state.posts.map((post,i) =>\n                <Blog\n                    key={i}\n                    id={post.id}\n                    title={post.title}\n                    content={post.content}\n                    deletePost={this.deletePost}\n                />\n            );\n        return (\n            <>\n                {posts}\n                <BlogAdmin\n                    createNewPost={this.createNewPost}\n                />\n            </>\n        );\n    }\n}","import React from \"react\";\nimport \"./Homepage.css\";\nimport BlogContainer from \"../Blog/BlogContainer.js\"\nexport default function Homepage(){\n    return(\n        <div className=\"main\">\n            <h1>Welcome to the underground</h1>\n        </div>\n    );\n}","import React from \"react\";\nimport \"./NavBar.css\";\nimport {Link} from \"react-router-dom\";\nexport default function NavBar(){\n    return(\n        <div id=\"navBar\">\n            <div id=\"logo\">\n                <h2>Shawn Morreau</h2>\n            </div>\n            <div id=\"links\">\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/about\">About</Link>\n                <Link to=\"/contact\">Contact Me</Link>\n                <Link to=\"/blog\">Blog</Link>\n\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport \"./Footer.css\";\nexport default function Footer() {\n    return (\n        <div id=\"footer\">\n            <a href=\"https://github.com/ShawnMorreau/shawnmorreau.github.io\" \n                target=\"_blank\"\n                rel=\"noopener noreferrer\">\n                <i className=\"github fa-2x fa fa-github\">\n                </i></a>\n            <span className=\"callToAction\">For updates and news follow us on our social media! </span>\n        </div>\n    );\n}\n\n","import React from \"react\";\n\nexport default function About(){\n    return(\n        <div className=\"main\">\n            Ma name is Shawn and I love Jaymee Maaghop oh oh oh oh oh so much!!!!\n        </div>\n    );\n}","import React from \"react\";\nimport {\n    HashRouter as Router, \n    Switch,\n    Route,\n    Link    \n} from \"react-router-dom\";\nimport Homepage from \"../Homepage/Homepage.js\";\nimport About from \"../About/About.js\";\nimport BlogContainer from \"../Blog/BlogContainer\";\nimport \"../Syling/Styling.css\";\nexport default function Routing(){\n    return(\n            <div className=\"main\">\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Homepage/>\n                    </Route>\n                    <Route path=\"/about\">\n                        <About/>\n                    </Route>\n                    <Route path=\"/contact\">\n                        <Homepage/>\n                    </Route>\n                    <Route path=\"/blog\">\n                        <BlogContainer/>\n                    </Route>\n                </Switch>\n            </div>\n    );\n}","import React from 'react';\nimport './App.css';\nimport Homepage from \"./Homepage/Homepage.js\";\nimport NavBar from \"./NavBar/NavBar.js\";\nimport Footer from \"./Footer/Footer.js\";\nimport Routing from \"./Routing/Routing.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar/>\n      <hr/>\n      <Routing/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}