{"ast":null,"code":"var _jsxFileName = \"/Users/shawnmorreau/Desktop/shawnmorreau.github.io/Backend/FrontEnd/src/Jaymee/Timer.js\";\nimport React, { useEffect } from \"react\";\nexport default class extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    let x = helpers.millisecondsToHuman(this.props.birthday - Date.now());\n    this.interval = setInterval(() => this.setState({\n      time: this.props.birthday - Date.now()\n    }), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.state.time);\n  }\n\n}","map":{"version":3,"sources":["/Users/shawnmorreau/Desktop/shawnmorreau.github.io/Backend/FrontEnd/src/Jaymee/Timer.js"],"names":["React","useEffect","Component","state","componentDidMount","x","helpers","millisecondsToHuman","props","birthday","Date","now","interval","setInterval","setState","time","componentWillUnmount","clearInterval","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,eAAe,cAAcD,KAAK,CAACE,SAApB,CAA6B;AAAA;AAAA;AAAA,SACxCC,KADwC,GAClC,EADkC;AAAA;;AAIxCC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,CAAC,GAAGC,OAAO,CAACC,mBAAR,CAA4B,KAAKC,KAAL,CAAWC,QAAX,GAAoBC,IAAI,CAACC,GAAL,EAAhD,CAAR;AACA,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKC,QAAL,CAAc;AAAEC,MAAAA,IAAI,EAAE,KAAKP,KAAL,CAAWC,QAAX,GAAsBC,IAAI,CAACC,GAAL;AAA9B,KAAd,CAAP,EAAiE,IAAjE,CAA3B;AACD;;AACDK,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKL,QAAN,CAAb;AACD;;AACHM,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKf,KAAL,CAAWY,IADhB,CADJ;AAKH;;AAjBuC","sourcesContent":["import React, {useEffect} from \"react\";\n\nexport default class extends React.Component{\n    state={\n\n    }\n    componentDidMount() {\n        let x = helpers.millisecondsToHuman(this.props.birthday-Date.now());\n        this.interval = setInterval(() => this.setState({ time: this.props.birthday - Date.now()}), 1000);\n      }\n      componentWillUnmount() {\n        clearInterval(this.interval);\n      }\n    render(){\n        return(\n            <p>\n                {this.state.time}\n            </p>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}