{"ast":null,"code":"var _jsxFileName = \"/Users/shawnmorreau/Desktop/shawnmorreau.github.io/Backend/FrontEnd/src/Skills/SkillsContainer.js\";\nimport React from \"react\";\nimport Skill from \"./Skill.js\";\nconst myStyle = {\n  stroke: \"rgb(255,255,0)\",\n  strokeWidth: 5,\n  zIndex: 1\n};\nconst svgStyle = {\n  position: \"absolute\",\n  // backgroundColor: \"green\",\n  opacity: 0.4,\n  zIndex: 1,\n  width: \"100%\",\n  minHeight: \"35vh\"\n};\nexport default class extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards: [{\n        key: 0,\n        title: \"Web Development\",\n        skills: [{\n          key: 0,\n          value: \"React\"\n        }, {\n          key: 1,\n          value: \"SCSS\"\n        }]\n      }, {\n        key: 1,\n        title: \"Personal\",\n        skills: [{\n          key: 0,\n          value: \"Loving Jaymee\"\n        }]\n      }, {\n        key: 2,\n        title: \"Anotha One\",\n        skills: [{\n          key: 0,\n          value: [\"being big op\"]\n        }]\n      }],\n      coordinates: []\n    };\n\n    this.updatePositionOfObjects = () => {\n      var rect = document.getElementsByClassName('MuiCard-root');\n      const position = {\n        x: 0,\n        y: 0\n      };\n      let coordinatesOfCards = [];\n      this.setState({\n        coordinates: []\n      });\n      Array.from(rect).forEach(element => {\n        this.setState({\n          coordinates: [...this.state.coordinates, {\n            x: element.getBoundingClientRect().x,\n            y: element.getBoundingClientRect().y\n          }]\n        }); // position.x = element.getBoundingClientRect().x;\n        // position.y = element.getBoundingClientRect().y;\n        // coordinatesOfCards=[...coordinatesOfCards,position];\n        // console.log(...coordinatesOfCards);\n      }); // this.setState({coordinates:coordinatesOfCards});\n\n      console.log(this.state);\n    };\n\n    this.drawTree = () => {\n      const lines = this.state.coordinates.map(x => React.createElement(\"svg\", {\n        style: svgStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"line\", {\n        x1: x.x,\n        y1: \"0\",\n        x2: x.x,\n        y2: x.y,\n        style: myStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })));\n      return lines;\n    };\n  }\n\n  componentDidMount() {\n    this.updatePositionOfObjects();\n    window.addEventListener('resize', this.updatePositionOfObjects);\n  }\n\n  render() {\n    const lines = this.drawTree();\n    return React.createElement(React.Fragment, null, lines, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.cards.map(x => React.createElement(Skill, {\n      title: x.title,\n      skills: x.skills,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/shawnmorreau/Desktop/shawnmorreau.github.io/Backend/FrontEnd/src/Skills/SkillsContainer.js"],"names":["React","Skill","myStyle","stroke","strokeWidth","zIndex","svgStyle","position","opacity","width","minHeight","Component","state","cards","key","title","skills","value","coordinates","updatePositionOfObjects","rect","document","getElementsByClassName","x","y","coordinatesOfCards","setState","Array","from","forEach","element","getBoundingClientRect","console","log","drawTree","lines","map","componentDidMount","window","addEventListener","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Skill from \"./Skill.js\";\n\nconst myStyle = {\n    stroke: \"rgb(255,255,0)\",\n    strokeWidth: 5,\n    zIndex: 1,\n}\nconst svgStyle = {\n    position: \"absolute\",\n    // backgroundColor: \"green\",\n    opacity: 0.4,\n    zIndex: 1,\n    width: \"100%\",\n    minHeight: \"35vh\",\n}\nexport default class extends React.Component {\n    state = {\n        cards: [{\n            key: 0,\n            title: \"Web Development\",\n            skills: [{ key: 0, value: \"React\" }, { key: 1, value: \"SCSS\" }],\n        },\n        {\n            key: 1,\n            title: \"Personal\",\n            skills: [{ key: 0, value: \"Loving Jaymee\" }],\n        },\n        {\n            key: 2,\n            title: \"Anotha One\",\n            skills: [{ key: 0, value: [\"being big op\"] }],\n        },\n        ],\n        coordinates:[],\n    }\n    componentDidMount() {\n        this.updatePositionOfObjects();\n        window.addEventListener('resize',this.updatePositionOfObjects);\n    }\n\n    updatePositionOfObjects=()=>{\n        var rect = document.getElementsByClassName('MuiCard-root');\n        const position = {\n            x: 0,\n            y: 0,\n        }\n        let coordinatesOfCards = [];\n        this.setState({coordinates:[]});\n        Array.from(rect).forEach(element => {\n            this.setState({coordinates:[\n                ...this.state.coordinates,\n                {\n                    x:element.getBoundingClientRect().x,\n                    y:element.getBoundingClientRect().y,\n                }\n            ]})\n            // position.x = element.getBoundingClientRect().x;\n            // position.y = element.getBoundingClientRect().y;\n            // coordinatesOfCards=[...coordinatesOfCards,position];\n            // console.log(...coordinatesOfCards);\n        });\n        // this.setState({coordinates:coordinatesOfCards});\n        console.log(this.state);\n    }\n\n    drawTree=()=>{\n        const lines = this.state.coordinates.map(x=>(\n            <svg style={svgStyle}>\n                <line x1={x.x} y1=\"0\" x2={x.x} y2={x.y}\n                    style={myStyle}\n                />\n            </svg>\n        ));\n        return lines;\n    }\n    render() {\n        const lines = this.drawTree();\n        return (\n            <>\n            {lines}\n            <div className=\"container\">\n                {this.state.cards.map(x => (\n                    <Skill title={x.title}\n                        skills={x.skills}\n                    />\n                ))}\n            </div>\n            </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}