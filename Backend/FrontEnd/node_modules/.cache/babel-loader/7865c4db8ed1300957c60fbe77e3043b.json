{"ast":null,"code":"var _jsxFileName = \"/Users/shawnmorreau/Desktop/shawnmorreau.github.io/Backend/FrontEnd/src/Skills/SkillsContainer.js\";\nimport React from \"react\";\nimport Skill from \"./Skill.js\";\nconst myStyle = {\n  stroke: \"rgb(255,255,0)\",\n  strokeWidth: 5,\n  zIndex: 1\n};\nconst svgStyle = {\n  position: \"absolute\",\n  backgroundColor: \"green\",\n  opacity: 0.4,\n  zIndex: 1,\n  width: \"100%\",\n  minHeight: \"35vh\"\n};\nexport default class extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards: [{\n        key: 0,\n        title: \"Web Development\",\n        skills: [{\n          key: 0,\n          value: \"React\"\n        }, {\n          key: 1,\n          value: \"SCSS\"\n        }]\n      }, {\n        key: 1,\n        title: \"Personal\",\n        skills: [{\n          key: 0,\n          value: \"Loving Jaymee\"\n        }]\n      }, {\n        key: 2,\n        title: \"Anotha One\",\n        skills: [{\n          key: 0,\n          value: [\"being big op\"]\n        }]\n      }],\n      pos: []\n    };\n    this.lines = [];\n\n    this.drawTree = arrayOfCards => {\n      this.lines = arrayOfCards.map(mid => React.createElement(\"svg\", {\n        style: svgStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"line\", {\n        x1: \"100\",\n        y1: \"0\",\n        x2: \"100\",\n        y2: \"100\",\n        style: myStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })));\n    };\n  }\n\n  componentDidMount() {\n    var rect = document.getElementsByClassName('MuiCard-root');\n    const position = {\n      x: 0,\n      y: 0\n    };\n    let coordinatesOfCards = [];\n    Array.from(rect).forEach(element => {\n      position.x = element.getBoundingClientRect().x;\n      position.y = element.getBoundingClientRect().y;\n      coordinatesOfCards = coordinatesOfCards.concat(position);\n    }); // this.setState({pos:coordinatesOfCards})\n    // .then(console.log(this.state));\n\n    this.drawTree(coordinatesOfCards);\n  }\n\n  render() {\n    const myStyle = {\n      stroke: \"rgb(255,255,0)\",\n      strokeWidth: 5,\n      zIndex: 1\n    };\n    const svgStyle = {\n      position: \"absolute\",\n      backgroundColor: \"green\",\n      opacity: 0.4,\n      zIndex: 1,\n      width: \"100%\",\n      minHeight: \"35vh\"\n    };\n    return React.createElement(React.Fragment, null, this.lines, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.cards.map(x => React.createElement(Skill, {\n      title: x.title,\n      skills: x.skills,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/shawnmorreau/Desktop/shawnmorreau.github.io/Backend/FrontEnd/src/Skills/SkillsContainer.js"],"names":["React","Skill","myStyle","stroke","strokeWidth","zIndex","svgStyle","position","backgroundColor","opacity","width","minHeight","Component","state","cards","key","title","skills","value","pos","lines","drawTree","arrayOfCards","map","mid","componentDidMount","rect","document","getElementsByClassName","x","y","coordinatesOfCards","Array","from","forEach","element","getBoundingClientRect","concat","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Skill from \"./Skill.js\";\n\nconst myStyle = {\n    stroke: \"rgb(255,255,0)\",\n    strokeWidth: 5,\n    zIndex: 1,\n}\nconst svgStyle = {\n    position: \"absolute\",\n    backgroundColor: \"green\",\n    opacity: 0.4,\n    zIndex: 1,\n    width: \"100%\",\n    minHeight: \"35vh\",\n}\nexport default class extends React.Component {\n    state = {\n        cards: [{\n            key: 0,\n            title: \"Web Development\",\n            skills: [{ key: 0, value: \"React\" }, { key: 1, value: \"SCSS\" }],\n        },\n        {\n            key: 1,\n            title: \"Personal\",\n            skills: [{ key: 0, value: \"Loving Jaymee\" }],\n        },\n        {\n            key: 2,\n            title: \"Anotha One\",\n            skills: [{ key: 0, value: [\"being big op\"] }],\n        },\n        ],\n        pos: [],\n    }\n    lines=[];\n    componentDidMount() {\n        var rect = document.getElementsByClassName('MuiCard-root');\n        const position = {\n            x: 0,\n            y: 0,\n        }\n        let coordinatesOfCards = [];\n        Array.from(rect).forEach(element => {\n            position.x = element.getBoundingClientRect().x;\n            position.y = element.getBoundingClientRect().y;\n            coordinatesOfCards = coordinatesOfCards.concat(position);\n        });\n        // this.setState({pos:coordinatesOfCards})\n            // .then(console.log(this.state));\n        this.drawTree(coordinatesOfCards);\n    }\n    drawTree=(arrayOfCards)=>{\n        this.lines = arrayOfCards.map(mid=>(\n            <svg style={svgStyle}>\n                <line x1=\"100\" y1=\"0\" x2=\"100\" y2=\"100\"\n                    style={myStyle}\n                />\n            </svg>\n        ));\n    }\n    render() {\n        \n        const myStyle = {\n            stroke: \"rgb(255,255,0)\",\n            strokeWidth: 5,\n            zIndex: 1,\n        }\n        const svgStyle = {\n            position: \"absolute\",\n            backgroundColor: \"green\",\n            opacity: 0.4,\n            zIndex: 1,\n            width: \"100%\",\n            minHeight: \"35vh\",\n        }\n        return (\n            <>\n            {this.lines}\n            {/* <svg style={svgStyle}>\n                <line x1=\"150\" y1=\"0\" x2=\"150\" y2=\"200\"\n                    style={myStyle}\n                />\n            </svg> */}\n            <div className=\"container\">\n                {this.state.cards.map(x => (\n                    <Skill title={x.title}\n                        skills={x.skills}\n                    />\n                ))}\n            </div>\n            </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}